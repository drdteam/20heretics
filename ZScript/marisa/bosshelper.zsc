/*
   Boss Helper : Makes the dark knights in MAP15 a bit tougher by giving them
   some unique abilities
*/
Class mkAfterimage : Actor
{
	void A_SetFrame()
	{
		if ( !master ) return;
		sprite = master.sprite;
		frame = master.frame;
		scale = master.scale;
		translation = master.translation;
		angle = master.angle;
	}

	Default
	{
		+NOGRAVITY
		+NOBLOCKMAP
		+DONTSPLASH
		+DONTTHRUST
	}

	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetFrame;
		"####" "#" 1 A_FadeOut(0.05);
		Wait;
	}
}

Class mkBossHelper : Actor
{
	Knight dknight;
	Vector2 strafevect;
	double chargeangle;
	bool infastmode, fastfiring;

	override void Tick()
	{
		if ( infastmode ) dknight.tics = min(dknight.tics,5);
		else if ( fastfiring ) dknight.tics = min(dknight.tics,4);
		Super.Tick();
	}

	override void PostBeginPlay()
	{
		dknight.health *= 3;
		dknight.scale *= 1.2;
		dknight.speed *= 1.2;
		dknight.bBOSS = true;
		dknight.bDONTHARMSPECIES = true;
		dknight.bNOINFIGHTSPECIES = true;
		dknight.species = "Dark Knight";
		dknight.A_SetSize(dknight.radius*1.2,dknight.height*1.2);
		Super.PostBeginPlay();
	}

	void A_DecideMove()
	{
		if ( dknight.health <= 0 ) return;
		if ( !dknight.CheckIfTargetInLOS() ) return;
		infastmode = false;
		fastfiring = false;
		strafevect = AngleToVector(Random(60,300),20.0);
		chargeangle = dknight.angle;
		int decision = random(0,100);
		if ( decision < 10 )
			SetStateLabel("FastMode");
		else if ( decision < 30 )
			SetStateLabel("FastFire");
		else if ( (decision < 50)
			&& dknight.Warp(dknight,strafevect.x*4,strafevect.y*4,
			flags:WARPF_TESTONLY) )
			SetStateLabel("Strafe");
		else if ( (decision < 65)
			&& (dknight.Distance2D(dknight.target) > 400) )
			SetStateLabel("Charge");
	}

	void A_Whoosh()
	{
		if ( dknight.health <= 0 ) return;
		dknight.A_PlaySound("hexen/whoosh");
	}

	void A_Strafe()
	{
		if ( dknight.health <= 0 ) return;
		dknight.A_FaceTarget();
		mkAfterImage ai;
		if ( ai = mkAfterImage(Spawn("mkAfterImage",dknight.pos)) )
			ai.master = dknight;
		dknight.A_RadiusThrust(1000,60,RTF_NOTMISSILE,60);
		dknight.tics = 3;
		dknight.Warp(dknight,strafevect.x,strafevect.y,
			flags:WARPF_INTERPOLATE);
	}

	void A_BeginCharge()
	{
		if ( dknight.health <= 0 ) return;
		chargeangle = dknight.AngleTo(dknight.target);
		dknight.SetStateLabel("Missile");
		dknight.tics = 15;
	}

	void A_Charge()
	{
		if ( dknight.health <= 0 ) return;
		dknight.angle = chargeangle;
		mkAfterImage ai;
		if ( ai = mkAfterImage(Spawn("mkAfterImage",dknight.pos)) )
			ai.master = dknight;
		dknight.A_Explode(25,70,XF_NOTMISSILE);
		dknight.A_RadiusThrust(2000,70,RTF_NOTMISSILE,70);
		dknight.tics = 3;
		if ( (dknight.CurState == dknight.ResolveState("Pain"))
			|| dknight.CheckMeleeRange() )
		{
			SetStateLabel("ChargeCooldown");
			return;
		}
		if ( !dknight.Warp(dknight,30.0,flags:WARPF_INTERPOLATE) )
		{
			if ( !dknight.CheckMeleeRange() )
				dknight.SetStateLabel("See");
			dknight.tics = 10;
			SetStateLabel("ChargeCooldown");
		}
	}

	void A_ForceFire()
	{
		if ( dknight.health <= 0 ) return;
		fastfiring = true;
		dknight.SetStateLabel("Missile");
	}

	void A_SetFastMode()
	{
		if ( dknight.health <= 0 ) return;
		infastmode = true;
	}

	Default
	{
		+NOGRAVITY
		+NOBLOCKMAP
	}

	States
	{
	Spawn:
		TNT1 A random(30,90) A_DecideMove;
		Loop;
	Strafe:
		TNT1 A 0 A_Whoosh;
		TNT1 AAAAAAAA 1 A_Strafe;
		Goto Spawn;
	Charge:
		TNT1 A 0 A_Whoosh;
		TNT1 A 10 A_BeginCharge;
		TNT1 A 1 A_Charge;
		Wait;
	ChargeCooldown:
		TNT1 A random(20,40);
		Goto Spawn;
	FastFire:
		TNT1 AAAA 12 A_ForceFire;
		Goto Spawn;
	FastMode:
		TNT1 A random(30,90) A_SetFastMode;
		Goto Spawn;
	}
}

Class mkBossManager : Actor
{
	Default
	{
		+NOGRAVITY
		+NOBLOCKMAP
		+NOINTERACTION
		+DONTSPLASH
	}

	override void PostBeginPlay()
	{
		ThinkerIterator bosslist = ThinkerIterator.Create("Knight");
		Knight boss;
		mkBossHelper helper;
		while ( boss = Knight(bosslist.Next()) )
		{
			if ( boss.tid != 667 ) continue;
			helper = mkBossHelper(Spawn("mkBossHelper"));
			if ( helper ) helper.dknight = boss;
		}
	}
}
